doctype html
html
  head
    title overdesigned portfolio &mdash; Adept Editor
    link rel="stylesheet" href="https://use.typekit.net/zmy3izz.css"
    link rel="stylesheet" href="/css/custom.css"
    link rel="stylesheet" href="/lightbox2/css/lightbox.min.css"    
    
  body
				
		div.container
		
			include _nav.slim
		
			div.row
				div.col
					figure.figure
						img.img-fluid.figure-img.border src='https://via.placeholder.com/1600x900.png'

						
						
			div.row
				div.col
					h2.mb-0
						| Adept Editor
						small.text-muted< &bull; desktop &bull; 5/2009&ndash;9/2009
					
			div.row
				div.col
					h5.text-uppercase Summary
					p 
						strong> Challenge:
						| Design a visual programming interface for a desktop automation system. The existing system used learning-by-demonstration backed by AI, but offered no way for users to see or edit the automation they had created. Targeted at non-programmers, it would have to overcome the complexity of the Adept scripting language and its abstract concepts like loops and variables.
					p 
						strong> Role:
						| Designer, user researcher, prototyper. I was assisted by a second UX researcher.
					p
						strong> Outcome:
						| Software based on our design spec was deployed with thousands of US Army intel analysts in 2013. Users praised the design’s power and simplicity.
			
			hr
			
			div.row
				div.col-12
					h5.text-uppercase Research
				div.col-md
					figure.figure
						img.img-fluid.figure-img.border src='https://via.placeholder.com/800x600.png'
					p End-user programming &mdash; i.e., programming for non-programmers &mdash; has been an area of research for decades, so we began with an extensive literature review and analysis of existing desktop automation tools.
				div.col-md
					figure.figure
						img.img-fluid.figure-img.border src='https://via.placeholder.com/800x600.png'
					p Next we developed personas and example workflows, using data from prior contextual interviews conducted by my colleagues. I led a focus group exploring several ways to represent batch operations and loops, knowing they were both a key feature of Adept and a common stumbling block for users.
					
			hr
			
			div.row
				div.col-12
					h5.text-uppercase Design
					figure.figure
						img.img-fluid.figure-img.border src='https://via.placeholder.com/900x333.png'
					p Working from the data we had gathered, we sketched solutions for three main challenges:
					ol
						li How to visualize a procedure, including loops.
						li How to make an edit, while constraining the user to valid edits whenever possible.
						li How to correct an error, without a full-fledged debugger. 
					p The most difficult challenge was crafting the language for modeling the user’s task. The user needed to recognize what each step of the task did, which meant we need to use the terms and phrases they would expect. Refining that language meant lots and lots of user testing.
					
			hr
			
			div.row
				div.col-12
					h5.text-uppercase User Testing
				div.col-md
					figure.figure
						img.img-fluid.figure-img.border src='/images/adept/photo.png'
				div.col-md
					p We selected tasks based on our research and created paper prototypes for our user tests. We conducted four iterations over the course of four weeks: each week we refined our mockups, recruited users (office workers), and ran think-aloud usability studies.
						
			hr
			
			div.row
				div.col-12
					h5.text-uppercase Rapid Prototyping
				div.col-sm
					figure.figure 
							a data-lightbox="answers" href='https://via.placeholder.com/900x480.png'
								img.img-fluid.figure-img.border src='https://via.placeholder.com/900x480.png'
				div.col-sm
					figure.figure
						a data-lightbox="answers" href='https://via.placeholder.com/900x480.png'
							img.img-fluid.figure-img.border src='https://via.placeholder.com/900x480.png'
				div.col-12
					p I implemented a semi-functional prototype of the editor using JavaFX. We conducted three rounds of user studies with office workers and US Army personnel, iterating on the design each time. The prototype not only let us test interactions like drag-and-drop and inline feedback, but it also enabled “Wizard of Oz”-style testing of the learning-by-demonstration model: I would watch the user perform a task, quickly build a procedure based on what the user did, and then present that procedure to them as the output of the AI, ready for editing.

			hr
			
			div.row
				div.col-12
					h5.text-uppercase Design Spec
				div.col
					figure.figure
						img.img-fluid.figure-img.border src='https://via.placeholder.com/900x220.png'
					p We created a specification document that explained our motivating design principles and provided a full walkthrough of the interface and user interactions. Appendices spelled out interactions, sizes, colors, and fonts.
					p Working from the spec, our software developers built a system that was deployed with thousands of US Army intel analysts in 2013. Users praised the power and simplicity of the design.
						
						
			hr
			
			div.row.mt-5.center.text-center
				div.col
					a.btn.btn-outline-primary href='/portfolio' Back to Portfolio

			
			include _footer.slim

| <script src="/lightbox2/js/lightbox-plus-jquery.min.js"></script>
javascript:
	lightbox.option({
    'fadeDuration': 300,
    'imageFadeDuration': 300,
    'resizeDuration' : 0
  })

